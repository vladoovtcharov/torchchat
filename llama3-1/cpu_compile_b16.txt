
python3 torchchat.py generate llama3.1 --quantize '{"precision": {"dtype":"float16"}, "executor":{"accelerator":"cpu"}}' --prompt "Once upon a time," --max-new-tokens 256 --compile --num-samples 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
python3 torchchat.py generate llama3.1 --quantize '{"precision": {"dtype":"float16"}, "executor":{"accelerator":"cpu"}}' --prompt "Once upon a time," --max-new-tokens 256 --compile --num-samples 3
W1031 13:03:30.197000 30883 .venv/lib/python3.12/site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
Using device=cpu Apple M1 Max
Loading model...
Time to load model: 2.38 seconds
Quantizing the model with: {'precision': {'dtype': 'float16'}, 'executor': {'accelerator': 'cpu'}}
Time to quantize model: 0.00 seconds
-----------------------------------------------------------
Once upon a time, in a small village nestled in the rolling hills of Tuscany, there lived a young girl named Sophia. Sophia was a curious and adventurous child, with a heart full of wonder and a mind full of questions. She loved to explore the countryside, chasing after butterflies and watching the sunflowers grow tall in the fields.
One day, while wandering through the village, Sophia stumbled upon a small, mysterious shop tucked away on a quiet street. The shop was called "La Bottega delle Merveille," which means "The Shop of Marvels." Sophia had never seen the shop before, but something about it drew her in. She pushed open the door and stepped inside.
The shop was dimly lit, with shelves upon shelves of strange and wondrous objects. There were vintage clockwork machines, antique scientific instruments, and mysterious artifacts from far-off lands. Sophia's eyes widened as she wandered through the aisles, taking in the sights and sounds of the shop.
At the back of the shop, behind a counter covered in dust and cobwebs, stood an old man with a kind face and a twinkle in his eye. He introduced himself as Signor Bello, the proprietor of La Bottega delle Merveille. Signor Bello welcomed Sophia with a2024-10-31:13:04:53,814 INFO     [generate.py:1162] 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                
Generated 255 tokens                 
Time for inference 1: 81.0548 sec total                 
Time to first token: 0.5664 sec with parallel prefill.                

      Total throughput: 3.1584 tokens/sec, 0.3166 s/token                 
First token throughput: 1.7655 tokens/sec, 0.5664 s/token                 
 Next token throughput: 3.1682 tokens/sec, 0.3156 s/token                     
2024-10-31:13:04:53,814 INFO     [generate.py:1173] 
Bandwidth achieved: 50.72 GB/s
2024-10-31:13:04:53,814 INFO     [generate.py:1177] *** This first iteration will include cold start effects for dynamic import, hardware caches, JIT compilation. ***
just-in-time compilation time (incl run time): 8.1e+01 seconds

========================================

Once upon a time, there was a beautiful queen who lived in a kingdom surrounded by rolling hills and sparkling lakes. She was a just and fair ruler, loved by her people, but she had one problem: her kingdom was plagued by a terrible drought.
The crops withered and died, the rivers ran dry, and the people suffered. The queen called upon her wisest advisors to find a solution to the problem. They searched far and wide, consulted the ancient tomes, and sought the advice of the most learned scholars, but no one could offer a lasting solution.
One day, a young woman with long, curly hair and a kind smile walked into the throne room. She introduced herself as a traveling healer, who had been traveling the land in search of a cure for the drought.
The queen was skeptical at first, but there was something about the young woman that put her at ease. She asked the healer what she believed was the cause of the drought and what she thought could be done to solve it.
The young woman thought for a moment, then began to speak. "Your Majesty, I believe the drought is not just a natural phenomenon, but a reflection of the imbalance within your kingdom. Your people have forgotten the ancient ways of living in harmony with nature. They have forgotten to2024-10-31:13:17:42,477 INFO     [generate.py:1162] 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                
Generated 255 tokens                 
Time for inference 2: 46.6757 sec total                 
Time to first token: 0.5390 sec with parallel prefill.                

      Total throughput: 5.4846 tokens/sec, 0.1823 s/token                 
First token throughput: 1.8551 tokens/sec, 0.5390 s/token                 
 Next token throughput: 5.5271 tokens/sec, 0.1809 s/token                     
2024-10-31:13:17:42,477 INFO     [generate.py:1173] 
Bandwidth achieved: 88.09 GB/s

========================================

Once upon a time, there lived a farmer named John. The farmer was never very rich, but he always provided for his family. However, he was not content to simply live off of his farm. He dreamed of building a large, beautiful house and living a comfortable life.
The farmer spent many years working hard on his farm, but he never seemed to get ahead. He would plant his crops, tend to his livestock, and harvest his crops, but he never seemed to accumulate any wealth.
One day, a wise old man came to the farmer and said, "John, why do you work so hard? Do you know that you can make a living off of very little land with the right knowledge?"
The farmer was puzzled. "How can this be?" he asked.
The wise old man smiled and said, "I will show you. Follow me."
The wise old man took the farmer to a small plot of land that was no bigger than a few acres. The land was very fertile, and the wise old man began to explain how to cultivate it.
The wise old man taught the farmer how to use high-yielding crop varieties, fertilize the soil, and conserve water. He also showed the farmer how to raise animals efficiently and sell them for a profit.
The farmer was2024-10-31:13:34:14,003 INFO     [generate.py:1162] 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                
Generated 255 tokens                 
Time for inference 3: 45.7470 sec total                 
Time to first token: 0.5107 sec with parallel prefill.                

      Total throughput: 5.5960 tokens/sec, 0.1787 s/token                 
First token throughput: 1.9580 tokens/sec, 0.5107 s/token                 
 Next token throughput: 5.6371 tokens/sec, 0.1774 s/token                     
2024-10-31:13:34:14,003 INFO     [generate.py:1173] 
Bandwidth achieved: 89.87 GB/s

========================================


      Average tokens/sec (total): 4.75                 
Average tokens/sec (first token): 1.86                 
Average tokens/sec (next tokens): 4.78 
                
